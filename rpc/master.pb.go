// Code generated by protoc-gen-go. DO NOT EDIT.
// source: master.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Agent struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Agent) Reset()         { *m = Agent{} }
func (m *Agent) String() string { return proto.CompactTextString(m) }
func (*Agent) ProtoMessage()    {}
func (*Agent) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{0}
}

func (m *Agent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Agent.Unmarshal(m, b)
}
func (m *Agent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Agent.Marshal(b, m, deterministic)
}
func (m *Agent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Agent.Merge(m, src)
}
func (m *Agent) XXX_Size() int {
	return xxx_messageInfo_Agent.Size(m)
}
func (m *Agent) XXX_DiscardUnknown() {
	xxx_messageInfo_Agent.DiscardUnknown(m)
}

var xxx_messageInfo_Agent proto.InternalMessageInfo

func (m *Agent) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Agent) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

type Monitor struct {
	Pid                  int32    `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Cpu                  float32  `protobuf:"fixed32,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory               float32  `protobuf:"fixed32,4,opt,name=memory,proto3" json:"memory,omitempty"`
	Threads              int32    `protobuf:"varint,5,opt,name=threads,proto3" json:"threads,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Monitor) Reset()         { *m = Monitor{} }
func (m *Monitor) String() string { return proto.CompactTextString(m) }
func (*Monitor) ProtoMessage()    {}
func (*Monitor) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{1}
}

func (m *Monitor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Monitor.Unmarshal(m, b)
}
func (m *Monitor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Monitor.Marshal(b, m, deterministic)
}
func (m *Monitor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Monitor.Merge(m, src)
}
func (m *Monitor) XXX_Size() int {
	return xxx_messageInfo_Monitor.Size(m)
}
func (m *Monitor) XXX_DiscardUnknown() {
	xxx_messageInfo_Monitor.DiscardUnknown(m)
}

var xxx_messageInfo_Monitor proto.InternalMessageInfo

func (m *Monitor) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *Monitor) GetCpu() float32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *Monitor) GetMemory() float32 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *Monitor) GetThreads() int32 {
	if m != nil {
		return m.Threads
	}
	return 0
}

type Exception struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Exception) Reset()         { *m = Exception{} }
func (m *Exception) String() string { return proto.CompactTextString(m) }
func (*Exception) ProtoMessage()    {}
func (*Exception) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{2}
}

func (m *Exception) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Exception.Unmarshal(m, b)
}
func (m *Exception) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Exception.Marshal(b, m, deterministic)
}
func (m *Exception) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Exception.Merge(m, src)
}
func (m *Exception) XXX_Size() int {
	return xxx_messageInfo_Exception.Size(m)
}
func (m *Exception) XXX_DiscardUnknown() {
	xxx_messageInfo_Exception.DiscardUnknown(m)
}

var xxx_messageInfo_Exception proto.InternalMessageInfo

func (m *Exception) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Exception) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AppMonitor struct {
	App                  *App     `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Monitor              *Monitor `protobuf:"bytes,2,opt,name=monitor,proto3" json:"monitor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppMonitor) Reset()         { *m = AppMonitor{} }
func (m *AppMonitor) String() string { return proto.CompactTextString(m) }
func (*AppMonitor) ProtoMessage()    {}
func (*AppMonitor) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{3}
}

func (m *AppMonitor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppMonitor.Unmarshal(m, b)
}
func (m *AppMonitor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppMonitor.Marshal(b, m, deterministic)
}
func (m *AppMonitor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppMonitor.Merge(m, src)
}
func (m *AppMonitor) XXX_Size() int {
	return xxx_messageInfo_AppMonitor.Size(m)
}
func (m *AppMonitor) XXX_DiscardUnknown() {
	xxx_messageInfo_AppMonitor.DiscardUnknown(m)
}

var xxx_messageInfo_AppMonitor proto.InternalMessageInfo

func (m *AppMonitor) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *AppMonitor) GetMonitor() *Monitor {
	if m != nil {
		return m.Monitor
	}
	return nil
}

type JobMonior struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Monitor              *Monitor `protobuf:"bytes,2,opt,name=monitor,proto3" json:"monitor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobMonior) Reset()         { *m = JobMonior{} }
func (m *JobMonior) String() string { return proto.CompactTextString(m) }
func (*JobMonior) ProtoMessage()    {}
func (*JobMonior) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{4}
}

func (m *JobMonior) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobMonior.Unmarshal(m, b)
}
func (m *JobMonior) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobMonior.Marshal(b, m, deterministic)
}
func (m *JobMonior) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobMonior.Merge(m, src)
}
func (m *JobMonior) XXX_Size() int {
	return xxx_messageInfo_JobMonior.Size(m)
}
func (m *JobMonior) XXX_DiscardUnknown() {
	xxx_messageInfo_JobMonior.DiscardUnknown(m)
}

var xxx_messageInfo_JobMonior proto.InternalMessageInfo

func (m *JobMonior) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *JobMonior) GetMonitor() *Monitor {
	if m != nil {
		return m.Monitor
	}
	return nil
}

type AppException struct {
	App                  *App       `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	Exception            *Exception `protobuf:"bytes,2,opt,name=exception,proto3" json:"exception,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AppException) Reset()         { *m = AppException{} }
func (m *AppException) String() string { return proto.CompactTextString(m) }
func (*AppException) ProtoMessage()    {}
func (*AppException) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{5}
}

func (m *AppException) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppException.Unmarshal(m, b)
}
func (m *AppException) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppException.Marshal(b, m, deterministic)
}
func (m *AppException) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppException.Merge(m, src)
}
func (m *AppException) XXX_Size() int {
	return xxx_messageInfo_AppException.Size(m)
}
func (m *AppException) XXX_DiscardUnknown() {
	xxx_messageInfo_AppException.DiscardUnknown(m)
}

var xxx_messageInfo_AppException proto.InternalMessageInfo

func (m *AppException) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *AppException) GetException() *Exception {
	if m != nil {
		return m.Exception
	}
	return nil
}

type JobException struct {
	Job                  *Job       `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	Exception            *Exception `protobuf:"bytes,2,opt,name=exception,proto3" json:"exception,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *JobException) Reset()         { *m = JobException{} }
func (m *JobException) String() string { return proto.CompactTextString(m) }
func (*JobException) ProtoMessage()    {}
func (*JobException) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9c348dec43a6705, []int{6}
}

func (m *JobException) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobException.Unmarshal(m, b)
}
func (m *JobException) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobException.Marshal(b, m, deterministic)
}
func (m *JobException) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobException.Merge(m, src)
}
func (m *JobException) XXX_Size() int {
	return xxx_messageInfo_JobException.Size(m)
}
func (m *JobException) XXX_DiscardUnknown() {
	xxx_messageInfo_JobException.DiscardUnknown(m)
}

var xxx_messageInfo_JobException proto.InternalMessageInfo

func (m *JobException) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (m *JobException) GetException() *Exception {
	if m != nil {
		return m.Exception
	}
	return nil
}

func init() {
	proto.RegisterType((*Agent)(nil), "Agent")
	proto.RegisterType((*Monitor)(nil), "Monitor")
	proto.RegisterType((*Exception)(nil), "Exception")
	proto.RegisterType((*AppMonitor)(nil), "AppMonitor")
	proto.RegisterType((*JobMonior)(nil), "JobMonior")
	proto.RegisterType((*AppException)(nil), "AppException")
	proto.RegisterType((*JobException)(nil), "JobException")
}

func init() { proto.RegisterFile("master.proto", fileDescriptor_f9c348dec43a6705) }

var fileDescriptor_f9c348dec43a6705 = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x14, 0x34, 0x49, 0x93, 0x36, 0xaf, 0x55, 0xcb, 0x1e, 0x4a, 0xe8, 0xc5, 0x92, 0x53, 0x51, 0x59,
	0xa4, 0x9e, 0x3c, 0x46, 0x10, 0xa5, 0x50, 0x90, 0x3d, 0x7a, 0x91, 0xa4, 0x5d, 0x6a, 0x0a, 0xc9,
	0x3e, 0x92, 0x15, 0xec, 0x2f, 0xf6, 0x6f, 0xc8, 0x6e, 0x36, 0x5f, 0xa8, 0xd0, 0xdb, 0xec, 0xbc,
	0x99, 0x61, 0xf6, 0xf1, 0x60, 0x92, 0xc5, 0xa5, 0xe4, 0x05, 0xc5, 0x42, 0x48, 0x31, 0x87, 0x24,
	0x2e, 0xb9, 0xc1, 0x7e, 0x8c, 0x58, 0xc3, 0x83, 0x48, 0x2a, 0x18, 0xde, 0x80, 0x1b, 0xed, 0x79,
	0x2e, 0xc9, 0x05, 0xd8, 0x29, 0x06, 0xd6, 0xc2, 0x5a, 0xfa, 0xcc, 0x4e, 0x91, 0x10, 0x18, 0xa0,
	0x28, 0x64, 0x60, 0x6b, 0x46, 0xe3, 0xf0, 0x1d, 0x86, 0x1b, 0x91, 0xa7, 0x52, 0x14, 0x64, 0x0a,
	0x0e, 0xa6, 0x3b, 0x3d, 0x75, 0x99, 0x82, 0x8a, 0xd9, 0xe2, 0x67, 0xe0, 0x2c, 0xac, 0xa5, 0xcd,
	0x14, 0x24, 0x33, 0xf0, 0x32, 0x9e, 0x89, 0xe2, 0x18, 0x0c, 0x34, 0x69, 0x5e, 0x24, 0x80, 0xa1,
	0xfc, 0x28, 0x78, 0xbc, 0x2b, 0x03, 0x57, 0xfb, 0xeb, 0x67, 0xf8, 0x00, 0xfe, 0xd3, 0xd7, 0x96,
	0xa3, 0x4c, 0x45, 0xae, 0x1a, 0xc8, 0x23, 0x72, 0xd3, 0x49, 0x63, 0x65, 0xcd, 0x78, 0x59, 0xc6,
	0x7b, 0x6e, 0x8a, 0xd5, 0xcf, 0xf0, 0x05, 0x20, 0x42, 0xac, 0xeb, 0xcd, 0xc0, 0x89, 0xb1, 0xfa,
	0xce, 0x78, 0x35, 0xa0, 0x11, 0x22, 0x53, 0x04, 0x09, 0x61, 0x98, 0x55, 0x12, 0xed, 0x1f, 0xaf,
	0x46, 0xd4, 0x58, 0x58, 0x3d, 0x08, 0x9f, 0xc1, 0x5f, 0x8b, 0x44, 0xd1, 0x55, 0xd0, 0x41, 0x24,
	0x4d, 0xd0, 0x5a, 0x24, 0x4c, 0x11, 0x27, 0x05, 0xbd, 0xc2, 0x24, 0x42, 0x6c, 0x3f, 0xf4, 0x5f,
	0xa9, 0x25, 0xf8, 0xbc, 0x16, 0x99, 0x34, 0xa0, 0x8d, 0x8d, 0xb5, 0x43, 0x95, 0xb8, 0x16, 0x49,
	0x2f, 0xf1, 0xcf, 0x76, 0x27, 0x27, 0xae, 0xbe, 0x2d, 0xf0, 0x36, 0xfa, 0x64, 0xc8, 0x15, 0x8c,
	0x18, 0xdf, 0xa7, 0x1a, 0x7b, 0x54, 0x5f, 0xc5, 0xdc, 0xa7, 0x8c, 0x97, 0x28, 0xf2, 0x92, 0x87,
	0x67, 0xe4, 0x16, 0xa6, 0xed, 0x8a, 0x19, 0x57, 0x27, 0x41, 0xc6, 0xb4, 0xa5, 0xfa, 0xea, 0x6b,
	0xb8, 0x6c, 0xd6, 0x68, 0xc4, 0x40, 0x1b, 0xa6, 0xaf, 0xbd, 0x03, 0xd2, 0xdd, 0x94, 0x91, 0x9f,
	0xd3, 0x2e, 0xf9, 0xcb, 0xd1, 0xdd, 0x44, 0xe3, 0xe8, 0x92, 0x3d, 0xc7, 0xa3, 0xfb, 0xe6, 0x14,
	0xb8, 0x4d, 0x3c, 0x7d, 0xf7, 0xf7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9f, 0xf3, 0xff, 0x1b,
	0x29, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MasterClient is the client API for Master service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MasterClient interface {
	Register(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Response, error)
	AppMonitorReport(ctx context.Context, in *AppMonitor, opts ...grpc.CallOption) (*Response, error)
	JobMoniorReport(ctx context.Context, in *JobMonior, opts ...grpc.CallOption) (*Response, error)
	AppExceptionReport(ctx context.Context, in *AppException, opts ...grpc.CallOption) (*Response, error)
	JobExceptionReport(ctx context.Context, in *JobException, opts ...grpc.CallOption) (*Response, error)
}

type masterClient struct {
	cc *grpc.ClientConn
}

func NewMasterClient(cc *grpc.ClientConn) MasterClient {
	return &masterClient{cc}
}

func (c *masterClient) Register(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Master/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) AppMonitorReport(ctx context.Context, in *AppMonitor, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Master/AppMonitorReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) JobMoniorReport(ctx context.Context, in *JobMonior, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Master/JobMoniorReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) AppExceptionReport(ctx context.Context, in *AppException, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Master/AppExceptionReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterClient) JobExceptionReport(ctx context.Context, in *JobException, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Master/JobExceptionReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MasterServer is the server API for Master service.
type MasterServer interface {
	Register(context.Context, *Agent) (*Response, error)
	AppMonitorReport(context.Context, *AppMonitor) (*Response, error)
	JobMoniorReport(context.Context, *JobMonior) (*Response, error)
	AppExceptionReport(context.Context, *AppException) (*Response, error)
	JobExceptionReport(context.Context, *JobException) (*Response, error)
}

// UnimplementedMasterServer can be embedded to have forward compatible implementations.
type UnimplementedMasterServer struct {
}

func (*UnimplementedMasterServer) Register(ctx context.Context, req *Agent) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedMasterServer) AppMonitorReport(ctx context.Context, req *AppMonitor) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppMonitorReport not implemented")
}
func (*UnimplementedMasterServer) JobMoniorReport(ctx context.Context, req *JobMonior) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JobMoniorReport not implemented")
}
func (*UnimplementedMasterServer) AppExceptionReport(ctx context.Context, req *AppException) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AppExceptionReport not implemented")
}
func (*UnimplementedMasterServer) JobExceptionReport(ctx context.Context, req *JobException) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JobExceptionReport not implemented")
}

func RegisterMasterServer(s *grpc.Server, srv MasterServer) {
	s.RegisterService(&_Master_serviceDesc, srv)
}

func _Master_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Agent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Master/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).Register(ctx, req.(*Agent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_AppMonitorReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppMonitor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).AppMonitorReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Master/AppMonitorReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).AppMonitorReport(ctx, req.(*AppMonitor))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_JobMoniorReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobMonior)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).JobMoniorReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Master/JobMoniorReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).JobMoniorReport(ctx, req.(*JobMonior))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_AppExceptionReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppException)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).AppExceptionReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Master/AppExceptionReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).AppExceptionReport(ctx, req.(*AppException))
	}
	return interceptor(ctx, in, info, handler)
}

func _Master_JobExceptionReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobException)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).JobExceptionReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Master/JobExceptionReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).JobExceptionReport(ctx, req.(*JobException))
	}
	return interceptor(ctx, in, info, handler)
}

var _Master_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Master",
	HandlerType: (*MasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _Master_Register_Handler,
		},
		{
			MethodName: "AppMonitorReport",
			Handler:    _Master_AppMonitorReport_Handler,
		},
		{
			MethodName: "JobMoniorReport",
			Handler:    _Master_JobMoniorReport_Handler,
		},
		{
			MethodName: "AppExceptionReport",
			Handler:    _Master_AppExceptionReport_Handler,
		},
		{
			MethodName: "JobExceptionReport",
			Handler:    _Master_JobExceptionReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "master.proto",
}
